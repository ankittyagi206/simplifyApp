{"version":3,"sources":["components/Home.js","components/Contact.js","components/About.js","components/Menu.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Home","useState","show","setShow","amount","setAmount","weight","setWeight","newAmount","setNewAmount","newWeight","setNewWeight","answerAmount","setAnswerAmount","answerWeight","setAnsewerWeight","Container","style","marginTop","Row","Col","xs","InputGroup","className","Text","FormControl","onChange","e","target","value","disabled","type","id","placeholder","Button","onClick","showHandler","variant","Form","Contact","margin","display","justifyContent","alignItems","Card","width","Img","src","Body","Title","textDecoration","href","About","alt","App","Navbar","expand","to","Brand","process","Toggle","Collapse","Nav","Link","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.626dfd94.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport \"./Menu.scss\";\r\nconst Home = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [amount, setAmount] = useState(0);\r\n  const [weight, setWeight] = useState(0);\r\n  const [newAmount, setNewAmount] = useState(0);\r\n  const [newWeight, setNewWeight] = useState(0);\r\n  const [answerAmount, setAnswerAmount] = useState(\"\");\r\n  const [answerWeight, setAnsewerWeight] = useState(\"\");\r\n  const showHandler = (show) => {\r\n    setShow(!show);\r\n    setAnsewerWeight(\"\");\r\n    setAnswerAmount(\"\");\r\n  };\r\n  const calAmount = () => {\r\n    if (newWeight > 0) {\r\n      let newAmount = (amount / weight) * newWeight;\r\n      setAnswerAmount(newAmount + \"₹\");\r\n    }\r\n  };\r\n\r\n  const calWeight = () => {\r\n    if (newAmount > 0) {\r\n      let newWeight = (weight / amount) * newAmount;\r\n      setAnsewerWeight(newWeight + \"Kg\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"3%\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\">\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Text>Kg</InputGroup.Text>\r\n            <FormControl\r\n              onChange={(e) => setWeight(e.target.value)}\r\n              disabled={show}\r\n              type=\"Number\"\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Weight\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs=\"auto\">\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Text>₹</InputGroup.Text>\r\n            <FormControl\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              disabled={show}\r\n              type=\"Number\"\r\n              id=\"inlineFormInputGroup\"\r\n              placeholder=\"Amout\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs=\"auto\">\r\n          <Button\r\n            className=\"navbar\"\r\n            disabled={weight === 0 || amount === 0}\r\n            onClick={() => showHandler(show)}\r\n          >\r\n            {show ? \"Reset\" : \"Set\"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {show ? (\r\n        <Row>\r\n          <Col className=\"align-items-center\">\r\n            <Row xs=\"auto\">\r\n              <Col>\r\n                <InputGroup className=\"mb-2\">\r\n                  <InputGroup.Text>Kg</InputGroup.Text>\r\n                  <FormControl\r\n                    onChange={(e) => setNewWeight(e.target.value)}\r\n                    type=\"Number\"\r\n                    id=\"inlineFormInputGroup\"\r\n                    placeholder=\"Weight\"\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={() => calAmount()} variant=\"success\">\r\n                  Calculate\r\n                </Button>\r\n              </Col>\r\n              <Col>{answerAmount}</Col>\r\n            </Row>\r\n\r\n            <Col xs=\"align-items-center\">\r\n              <Row xs=\"auto\">\r\n                <Col>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <InputGroup.Text>₹</InputGroup.Text>\r\n                    <FormControl\r\n                      onChange={(e) => setNewAmount(e.target.value)}\r\n                      type=\"Number\"\r\n                      id=\"inlineFormInputGroup\"\r\n                      placeholder=\"Amout\"\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Button onClick={() => calWeight()} variant=\"success\">\r\n                    Calculate\r\n                  </Button>\r\n                </Col>\r\n                <Col>{answerWeight}</Col>\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        <Form.Text className=\"text-danger\">Fill the data* </Form.Text>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport \"./Menu.scss\";\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"5% \",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card\r\n        style={{\r\n          width: \"20rem\",\r\n        }}\r\n      >\r\n        <Card.Img variant=\"top\" src=\"/Contact.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Ankit Tyagi</Card.Title>\r\n          <Card.Text>\r\n            Hii,I love to learn new things.Contact me on the below social media\r\n            handles.\r\n          </Card.Text>\r\n\r\n          <a\r\n            style={{ textDecoration: \"none\" }}\r\n            href=\"https://www.linkedin.com/in/ankittyagi-webdeveloper/\"\r\n            target=\"_blank\"\r\n          >\r\n            <Button variant=\"primary\" className=\"navbar\">\r\n              linkedin\r\n            </Button>\r\n          </a>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"5% \",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card\r\n        style={{\r\n          width: \"20rem\",\r\n        }}\r\n      >\r\n        <Card.Img variant=\"top\" src=\"/icon-512.png\" alt=\"image\" />\r\n        <Card.Body>\r\n          <Card.Title>Simplify</Card.Title>\r\n          <Card.Text>An app to simplify our day to day life.</Card.Text>\r\n          <Card.Text>Made With ❤ By Ankit</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport \"./Menu.scss\";\r\nimport \"bootstrap/scss/bootstrap.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Navbar expand=\"lg\" variant=\"dark\" className=\"navbar\">\r\n      <Container>\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand>\r\n            <img src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"logo\" />\r\n          </Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <LinkContainer to=\"/about\">\r\n              <Nav.Link>About</Nav.Link>\r\n            </LinkContainer>\r\n\r\n            <LinkContainer to=\"/contact\">\r\n              <Nav.Link>Contact</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport About from \"./components/About\";\nimport Menu from \"./components/Menu\";\n\nconst App = () => {\n  return (\n    <div>\n      <Menu />\n      <Switch>\n        <Route path=\"/about\" exact component={About} />\n        <Route path=\"/contact\" exact component={Contact} />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/Simplify\" exact component={Home} />\n      </Switch>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}